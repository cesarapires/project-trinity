{
    "openapi": "3.0.0",
    "info": {
        "title": "Project Trinity",
        "version": "0.1"
    },
    "paths": {
        "/api/v1/addresses": {
            "post": {
                "tags": [
                    "Address"
                ],
                "description": "Store new address",
                "operationId": "9d542a6f3e0e00b02ababc0da8e022bc",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "cep": {
                                        "$ref": "#/components/schemas/Address/properties/cep"
                                    },
                                    "address": {
                                        "$ref": "#/components/schemas/Address/properties/address"
                                    },
                                    "complement": {
                                        "$ref": "#/components/schemas/Address/properties/complement"
                                    },
                                    "number": {
                                        "$ref": "#/components/schemas/Address/properties/number"
                                    },
                                    "district": {
                                        "$ref": "#/components/schemas/Address/properties/district"
                                    },
                                    "city": {
                                        "$ref": "#/components/schemas/Address/properties/city"
                                    },
                                    "state": {
                                        "$ref": "#/components/schemas/Address/properties/state"
                                    },
                                    "ibge": {
                                        "$ref": "#/components/schemas/Address/properties/ibge"
                                    },
                                    "gia": {
                                        "$ref": "#/components/schemas/Address/properties/gia"
                                    },
                                    "ddd": {
                                        "$ref": "#/components/schemas/Address/properties/ddd"
                                    },
                                    "siafi": {
                                        "$ref": "#/components/schemas/Address/properties/siafi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The address was created successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "success_created"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The address was created successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "417": {
                        "description": "Could not create a new address!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "failed_created"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Could not create a new address!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/addresses/{address_id}": {
            "get": {
                "tags": [
                    "Address"
                ],
                "description": "Get the address",
                "operationId": "664a7297568fd920547bee84183f62af",
                "parameters": [
                    {
                        "name": "address_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Address/properties/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Found Address.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error: Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "not_found"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Address {address_id} not found!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Address"
                ],
                "description": "Delete the address",
                "operationId": "49cb22b3eb172af1e5f524432fb56586",
                "parameters": [
                    {
                        "name": "address_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Address/properties/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The address has been deleted successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "success_deleted"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The address has been deleted successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Could not delete a address!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "failed_deleted"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Could not delete a address!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/addresses/{addres_id}": {
            "put": {
                "tags": [
                    "Address"
                ],
                "description": "Update customer",
                "operationId": "c3fd1eaf9a794d45f187e4da8d74310a",
                "parameters": [
                    {
                        "name": "addres_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Customer/properties/id"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "cep": {
                                        "$ref": "#/components/schemas/Address/properties/cep"
                                    },
                                    "address": {
                                        "$ref": "#/components/schemas/Address/properties/address"
                                    },
                                    "complement": {
                                        "$ref": "#/components/schemas/Address/properties/complement"
                                    },
                                    "number": {
                                        "$ref": "#/components/schemas/Address/properties/number"
                                    },
                                    "district": {
                                        "$ref": "#/components/schemas/Address/properties/district"
                                    },
                                    "city": {
                                        "$ref": "#/components/schemas/Address/properties/city"
                                    },
                                    "state": {
                                        "$ref": "#/components/schemas/Address/properties/state"
                                    },
                                    "ibge": {
                                        "$ref": "#/components/schemas/Address/properties/ibge"
                                    },
                                    "gia": {
                                        "$ref": "#/components/schemas/Address/properties/gia"
                                    },
                                    "ddd": {
                                        "$ref": "#/components/schemas/Address/properties/ddd"
                                    },
                                    "siafi": {
                                        "$ref": "#/components/schemas/Address/properties/siafi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The address has been updated successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "success_updated"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The address has been updated successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "417": {
                        "description": "Could not update a address!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "failed_updated"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Could not update a address!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/customers": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "description": "Get all customers",
                "operationId": "fddf8e3800951c00bc5fbd50026d7e6a",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Customer"
                ],
                "description": "Store new customer",
                "operationId": "59d57e1ee7b485895d41c89b775a8779",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "$ref": "#/components/schemas/Customer/properties/name"
                                    },
                                    "birthdate": {
                                        "$ref": "#/components/schemas/Customer/properties/birthdate"
                                    },
                                    "cpf": {
                                        "$ref": "#/components/schemas/Customer/properties/cpf"
                                    },
                                    "rg": {
                                        "$ref": "#/components/schemas/Customer/properties/rg"
                                    },
                                    "cellphone": {
                                        "$ref": "#/components/schemas/Customer/properties/cellphone"
                                    },
                                    "telephone": {
                                        "$ref": "#/components/schemas/Customer/properties/telephone"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The customer was created successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "success_created"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The customer was created successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "417": {
                        "description": "Could not create a new customer!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "failed_created"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Could not create a new customer!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{customer_id}": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "description": "Get the customer",
                "operationId": "8f3de6aef808991d23fac52e476a009b",
                "parameters": [
                    {
                        "name": "customer_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Customer/properties/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Found Customer.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error: Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "not_found"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer {customer_id} not found!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Customer"
                ],
                "description": "Update customer",
                "operationId": "760b3136f6d46279ecbcd702620994f6",
                "parameters": [
                    {
                        "name": "customer_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Customer/properties/id"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "$ref": "#/components/schemas/Customer/properties/name"
                                    },
                                    "birthdate": {
                                        "$ref": "#/components/schemas/Customer/properties/birthdate"
                                    },
                                    "cpf": {
                                        "$ref": "#/components/schemas/Customer/properties/cpf"
                                    },
                                    "rg": {
                                        "$ref": "#/components/schemas/Customer/properties/rg"
                                    },
                                    "cellphone": {
                                        "$ref": "#/components/schemas/Customer/properties/cellphone"
                                    },
                                    "telephone": {
                                        "$ref": "#/components/schemas/Customer/properties/telephone"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The customer has been updated successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "success_updated"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The customer has been updated successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "417": {
                        "description": "Could not update a customer!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "failed_updated"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Could not update a customer!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Customer"
                ],
                "description": "Delete the customer",
                "operationId": "50e8d29702c868674c8c47f6f1e23d49",
                "parameters": [
                    {
                        "name": "customer_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Customer/properties/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The customer has been deleted successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "success_deleted"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The customer has been deleted successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Could not delete a customer!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "failed_deleted"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Could not delete a customer!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/orders": {
            "post": {
                "tags": [
                    "Order"
                ],
                "description": "Store new order",
                "operationId": "8cb746eb001b58ac915930ba43cfdf0d",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "date_order": {
                                        "$ref": "#/components/schemas/Order/properties/date_order"
                                    },
                                    "status": {
                                        "$ref": "#/components/schemas/Order/properties/status"
                                    },
                                    "subtotal_products": {
                                        "$ref": "#/components/schemas/Order/properties/subtotal_products"
                                    },
                                    "discount": {
                                        "$ref": "#/components/schemas/Order/properties/discount"
                                    },
                                    "addition": {
                                        "$ref": "#/components/schemas/Order/properties/addition"
                                    },
                                    "total": {
                                        "$ref": "#/components/schemas/Order/properties/total"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The order was created successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "success_created"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The order was created successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "417": {
                        "description": "Could not create a new order!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "failed_created"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Could not create a new order!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/orders/{order_id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "description": "Get the order",
                "operationId": "20d856e36f464f13ed216b73d5eddc61",
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Order/properties/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Found Order.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error: Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "not_found"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order {order_id} not found!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Order"
                ],
                "description": "Update order",
                "operationId": "74f876416cc9bb2855f78a434e8f007c",
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Order/properties/id"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "date_order": {
                                        "$ref": "#/components/schemas/Order/properties/date_order"
                                    },
                                    "status": {
                                        "$ref": "#/components/schemas/Order/properties/status"
                                    },
                                    "subtotal_products": {
                                        "$ref": "#/components/schemas/Order/properties/subtotal_products"
                                    },
                                    "discount": {
                                        "$ref": "#/components/schemas/Order/properties/discount"
                                    },
                                    "addition": {
                                        "$ref": "#/components/schemas/Order/properties/addition"
                                    },
                                    "total": {
                                        "$ref": "#/components/schemas/Order/properties/total"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The order has been updated successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "success_updated"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The order has been updated successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "417": {
                        "description": "Could not update a order!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "failed_updated"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Could not update a order!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Order"
                ],
                "description": "Delete the order",
                "operationId": "e748271a93f14ee450cfd13440e2b091",
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Order/properties/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The order has been deleted successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "success_deleted"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The order has been deleted successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Could not delete a order!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "failed_deleted"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Could not delete a order!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Address": {
                "title": "Address model",
                "description": "Address model",
                "properties": {
                    "id": {
                        "description": "The unique identifier of a address.",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "cep": {
                        "description": "The Zip address code.",
                        "type": "string",
                        "maxLength": 9,
                        "example": "75352-805"
                    },
                    "address": {
                        "description": "The address.",
                        "type": "string",
                        "maxLength": 256,
                        "example": "Darlene Land"
                    },
                    "complement": {
                        "description": "The complement of address (Apartament, Condomain name)",
                        "type": "string",
                        "maxLength": 256,
                        "example": "Expedita dicta sit."
                    },
                    "number": {
                        "description": "The number of address",
                        "type": "string",
                        "maxLength": 6,
                        "example": "256"
                    },
                    "district": {
                        "description": "The name of district",
                        "type": "string",
                        "maxLength": 256,
                        "example": "Sunsari"
                    },
                    "city": {
                        "description": "The name of city",
                        "type": "string",
                        "maxLength": 256,
                        "example": "East Rodrickfort"
                    },
                    "state": {
                        "description": "The name of state",
                        "type": "string",
                        "maxLength": 256,
                        "example": "SD"
                    },
                    "country": {
                        "description": "The name of country",
                        "type": "string",
                        "maxLength": 256,
                        "example": "Cote d'Ivoire"
                    },
                    "ibge": {
                        "description": "The municipality code is composed of 7 numeric digits, with \nthe first two representing the Federal Union. Inform the \ncode 9999999 and the name of the municipality “EXTERIOR” \nfor operations involving locations abroad.",
                        "type": "string",
                        "maxLength": 256,
                        "example": "826059"
                    },
                    "gia": {
                        "description": "The GIA, ICMS Information and Calculation Guide, is the instrument\nby which the taxpayer registered and obliged to book tax books must \ndeclare, within the regulatory period, the economic-fiscal information,\naccording to the tax calculation regime to which he is subject. \nor according to the operations or installments carried out in the period.",
                        "type": "string",
                        "maxLength": 256,
                        "example": "null"
                    },
                    "ddd": {
                        "description": "DDD stands for Direct Distance Dial. It is an automatic telephone connection\nsystem between different national urban areas. The DDD is a code consisting \nof 2 digits that identify the main cities in the country and must be added to \nthe telephone number, along with the operator code.",
                        "type": "string",
                        "maxLength": 256,
                        "example": "35"
                    },
                    "siafi": {
                        "description": "The Integrated System of Financial Administration of the Federal Government \npresents itself as a computerized system for processing and controlling the \nbudgetary, financial and patrimonial execution of the agencies of the direct \nand indirect federal Public Administration.",
                        "type": "string",
                        "maxLength": 256,
                        "example": "252"
                    }
                },
                "type": "object"
            },
            "Customer": {
                "title": "Customer model",
                "description": "Customer model",
                "properties": {
                    "id": {
                        "description": "The unique identifier of a customer.",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "The name of customer.",
                        "type": "string",
                        "maxLength": 256,
                        "example": "Alisha Muller"
                    },
                    "birthdate": {
                        "description": "The birthdate of customer.",
                        "type": "string",
                        "format": "date",
                        "example": "2002-12-08"
                    },
                    "cpf": {
                        "description": "The cpf of customer.",
                        "type": "string",
                        "maxLength": 14,
                        "example": "943.902.719-38"
                    },
                    "rg": {
                        "description": "The rg of customer.",
                        "type": "string",
                        "maxLength": 14,
                        "example": "07.485.422-4"
                    },
                    "cellphone": {
                        "description": "The cellphone of customer.",
                        "type": "string",
                        "maxLength": 16,
                        "example": "(28) 96560-8354"
                    },
                    "telephone": {
                        "description": "The telephone of customer.",
                        "type": "string",
                        "maxLength": 16,
                        "example": "(28) 96560-8354"
                    }
                },
                "type": "object"
            },
            "Order": {
                "title": "Order model",
                "description": "Order model",
                "properties": {
                    "id": {
                        "description": "The unique identifier of a order.",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "date_order": {
                        "description": "The date of order.",
                        "type": "string",
                        "format": "date",
                        "example": "2002-12-08"
                    },
                    "status": {
                        "description": "The status of order.",
                        "type": "string",
                        "maxLength": 14,
                        "example": "O"
                    },
                    "subtotal_products": {
                        "description": "The status of order.",
                        "type": "number",
                        "format": "float",
                        "maxLength": 14,
                        "example": "14.56"
                    },
                    "discount": {
                        "description": "The discount of order.",
                        "type": "number",
                        "format": "float",
                        "maxLength": 14,
                        "example": "1"
                    },
                    "addition": {
                        "description": "The addition of order.",
                        "type": "number",
                        "format": "float",
                        "maxLength": 14,
                        "example": "5.46"
                    },
                    "total": {
                        "description": "The total of order.",
                        "type": "number",
                        "format": "float",
                        "maxLength": 14,
                        "example": "19.00"
                    }
                },
                "type": "object"
            }
        }
    }
}